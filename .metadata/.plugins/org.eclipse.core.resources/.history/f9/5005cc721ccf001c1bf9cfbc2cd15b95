package application;

import sprite.Sprite;

public class CollisionDetector {
	
	GamePanel gamePanel;
	
	public CollisionDetector(GamePanel gamePanel) {
		this.gamePanel = gamePanel;
	}
	
	public int detectCollision(Sprite sprite) {
		int spriteLeft = sprite.getX() + sprite.getHitBox().x;
		int spriteRight = sprite.getX() + sprite.getHitBox().x + sprite.getHitBox().width;
		int spriteTop = sprite.getY() + sprite.getHitBox().y;
		int spriteBottom = sprite.getY() + sprite.getHitBox().y + sprite.getHitBox().height;
		
		int spriteLeftCol = spriteLeft / gamePanel.getTileSize();
		int spriteRightCol = spriteRight / gamePanel.getTileSize();
		int spriteTopRow = spriteTop / gamePanel.getTileSize();
		int spriteBottomRow = spriteBottom / gamePanel.getTileSize();
		
		int tile1, tile2;
		
		switch(sprite.getDirection()) {
		case "up":
			spriteTopRow = (spriteTop - sprite.getSpeed()) / gamePanel.getTileSize();
			tile1 = gamePanel.tileManager.getMap()[spriteLeftCol][spriteTopRow];
			tile2 = gamePanel.tileManager.getMap()[spriteRightCol][spriteTopRow];
			if(gamePanel.tileManager.tileTypes[tile1].getCollision() || gamePanel.tileManager.tileTypes[tile2].getCollision())
				sprite.setCollision(true);
			break;
		case "down":
			spriteBottomRow = (spriteBottom + sprite.getSpeed()) / gamePanel.getTileSize();
			tile1 = gamePanel.tileManager.getMap()[spriteLeftCol][spriteBottomRow];
			tile2 = gamePanel.tileManager.getMap()[spriteRightCol][spriteBottomRow];
			if(gamePanel.tileManager.tileTypes[tile1].getCollision() || gamePanel.tileManager.tileTypes[tile2].getCollision())
				sprite.setCollision(true);
			break;
		case "left":
			spriteLeftCol = (spriteLeft - sprite.getSpeed()) / gamePanel.getTileSize();
			tile1 = gamePanel.tileManager.getMap()[spriteLeftCol][spriteTopRow];
			tile2 = gamePanel.tileManager.getMap()[spriteLeftCol][spriteBottomRow];
			if(gamePanel.tileManager.tileTypes[tile1].getCollision() || gamePanel.tileManager.tileTypes[tile2].getCollision())
				sprite.setCollision(true);
			break;
		case "right":
			spriteRightCol = (spriteRight + sprite.getSpeed()) / gamePanel.getTileSize();
			tile1 = gamePanel.tileManager.getMap()[spriteRightCol][spriteTopRow];
			tile2 = gamePanel.tileManager.getMap()[spriteRightCol][spriteBottomRow];
			if(gamePanel.tileManager.tileTypes[tile1].getCollision() || gamePanel.tileManager.tileTypes[tile2].getCollision())
				sprite.setCollision(true);
			break;
		}
		return detectObject(sprite);
	}
	
	private int detectObject(Sprite sprite) {
		int index = -1;
		for(int i = 0; i < gamePanel.object.length; i++) {
			if(gamePanel.object[i] != null) {
				if(gamePanel.object[i].getCollision()) {
					int spriteLeft = sprite.getX() + sprite.getHitBox().x;
					int spriteRight = sprite.getX() + sprite.getHitBox().x + sprite.getHitBox().width;
					int spriteTop = sprite.getY() + sprite.getHitBox().y;
					int spriteBottom = sprite.getY() + sprite.getHitBox().y + sprite.getHitBox().height;
					switch(sprite.getDirection()) {
					case "up":
						if (spriteTop - sprite.getSpeed() < gamePanel.object[i].getY() + gamePanel.object[i]
								.getHeight() /*
												 * && (spriteLeft >= gamePanel.object[i].getX() || spriteRight <=
												 * gamePanel.object[i].getX() + gamePanel.object[i].getWidth())
												 */)
							if(spriteLeft >= gamePanel.object[i].getX() || spriteRight <= gamePanel.object[i].getX() + gamePanel.object[i].getWidth())
								sprite.setCollision(true);
							else
								sprite.setCollision(false);
						break;
					case "down":
						if (spriteBottom + sprite.getSpeed() > gamePanel.object[i]
								.getY() /*
										 * && (spriteLeft >= gamePanel.object[i].getX() || spriteRight <=
										 * gamePanel.object[i].getX() + gamePanel.object[i].getWidth())
										 */)
							sprite.setCollision(true);
						break;
					case "left":
						if (spriteLeft - sprite.getSpeed() < gamePanel.object[i].getX() + gamePanel.object[i]
								.getWidth() /*
											 * && (spriteTop >= gamePanel.object[i].getY() || spriteBottom <=
											 * gamePanel.object[i].getY() + gamePanel.object[i].getHeight())
											 */)
							sprite.setCollision(true);
						break;
					case "right":
						if (spriteRight + sprite.getSpeed() > gamePanel.object[i]
								.getX() /*
										 * && (spriteTop >= gamePanel.object[i].getY() || spriteBottom <=
										 * gamePanel.object[i].getY() + gamePanel.object[i].getHeight())
										 */)
							sprite.setCollision(true);
						break;
					}
				}
			}
		}
		return index;		
	}
}
